

#ifndef TRANSPORT_RTP_H
#define TRANSPORT_RTP_H

#include <types.h>
#include "cache_transport.h"
#include "../librtp/rtp_prot/rtp_api.h"

extern "C" {
void process_rtcp_packet(void *buf, uint32_t size);
}

/*!
 * This is the implementation of the class that play back
 * the packets stored in cache, using teh RTP/TCP protocol.
 */
class TransportRTP : public CacheTransport
{
 public:
	/*! Constructor */
	TransportRTP();

	/*! Destructor  */
	~TransportRTP();

	uint8_t setup();

	void close();

	/*! Sends a packet to the client. */
	// size_t send_packet(void *buf, size_t size, u_int8_t pt, u_int32_t timestamp);

	uint16_t get_port() {return m_local_port;}
	
	context get_context_id() {return m_context_id;}
	
	/*! Reimplemented */
	void run(void);
	
 private:
	context m_context_id;

	/*! This is the RTP port dynamically chosen.
	 *  The RTCP port will be m_local_port+1
	 */
	uint16_t m_local_port;

	/*! Timestamp of the last packet previously sent..*/
	uint32_t m_prev_timestamp;
};


#endif
